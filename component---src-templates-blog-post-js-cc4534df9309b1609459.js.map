{"version":3,"file":"component---src-templates-blog-post-js-cc4534df9309b1609459.js","mappings":"qNAOA,MAqDaA,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,WAKxD,UA9DyBC,IAGlB,IAADC,EAAA,IAFJV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAEC,EAAMZ,eAAgBC,GAAM,SACpDY,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAS,QAE9C,OACEF,EAAAA,cAACc,EAAAA,EAAM,CAACH,SAAUA,EAAUT,MAAOU,GACjCZ,EAAAA,cAAA,WACEe,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETjB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIkB,SAAS,YAAYnB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,SAAID,EAAKI,YAAYgB,OAEvBnB,EAAAA,cAAA,WACEoB,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCJ,SAAS,iBAIblB,EAAAA,cAAA,OAAKe,UAAU,iBACbf,EAAAA,cAAA,MACEuB,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX5B,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAO,KACtCzB,EAASL,YAAYD,QAI9BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAAC6B,EAAAA,KAAI,CAACC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKN,YAAYD,MAAM,U,+CCDxC,IAvCYI,IAAuC,IAADC,EAAA2B,EAAAC,EAAA,IAArC,YAAE/B,EAAW,MAAEF,EAAK,SAAEkC,GAAU9B,EAC3C,MAAM,KAAEI,IAAS2B,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBlC,GAAeM,EAAKG,aAAaT,YACnDmC,EAAgC,QAApBhC,EAAGG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQuC,EAAe,GAAGrC,OAAWqC,IAAiBrC,GACtDF,EAAAA,cAAA,QAAMwC,KAAK,cAAcC,QAASH,IAClCtC,EAAAA,cAAA,QAAM0C,SAAS,WAAWD,QAASvC,IACnCF,EAAAA,cAAA,QAAM0C,SAAS,iBAAiBD,QAASH,IACzCtC,EAAAA,cAAA,QAAM0C,SAAS,UAAUD,QAAQ,YACjCzC,EAAAA,cAAA,QAAMwC,KAAK,eAAeC,QAAQ,YAClCzC,EAAAA,cAAA,QACEwC,KAAK,kBACLC,SAA0B,QAAjBP,EAAAxB,EAAKG,oBAAY,IAAAqB,GAAQ,QAARC,EAAjBD,EAAmBS,cAAM,IAAAR,OAAR,EAAjBA,EAA2BS,UAAW,KAEjD5C,EAAAA,cAAA,QAAMwC,KAAK,gBAAgBC,QAASvC,IACpCF,EAAAA,cAAA,QAAMwC,KAAK,sBAAsBC,QAASH,IACzCF,G","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","_site$siteMetadata2","_site$siteMetadata2$s","children","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}